author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

config_schema:
  - ["debug.level", 3]
  - ["wifi.ap.enable","b",false,{title: "disable wifi ap"}]
  - ["wifi.sta.enable","b",true,{title: "enable wifi sta"}]
  - ["wifi.sta.ssid","s","raspberryWifi01",{title: "ssid wifi sta"}]
  - ["wifi.sta.pass","s","raspberry01",{title: "pass wifi sta"}]
  - ["sys.atca.enable", "b", true, {title: "enable atca for ATEC508"}]
  - ["i2c.enable", "b", true, {title: "Enable I2C"}]
  - ["sys.atca.i2c_addr", "i", 0x60, {title: "I2C address of the chip"}]
  - ["mqtt.enable", "b", true, {title: "Activate service MQTT"}]
  - ["mqtt.server", "s", "mqtt.com:8883", {title: "Adresse of server MQTT "}]
  - ["mqtt.pub", "s", "/esp8266", {title: "the topic "}]
  - ["mqtt.user", "s", "mqtt.tmc.com", {title: "usename for access server MQTT"}]
  - ["mqtt.pass", "s", "123456789", {title: "password for access  server MQTT"}]
  - ["mqtt.ssl_ca_cert", "s", "ecc.ca.cert.pem", {title: "Le certificat AC pour verifier le certificat du serveur"}]
  - ["mqtt.ssl_cert", "s", "ecc.esp8266.cert.pem", {title: "Le certificat du client"}]
  - ["mqtt.ssl_key", ATCA:0]
cdefs:
  MG_ENABLE_MQTT: 1
  MG_ENABLE_SSL: 1

build_vars:
  # Override to 0 to disable ATECCx08 support.    # Set to 1 to enable ATECCx08 support.
  # Since library is binary, you also need to specify variant: noatca.    MGOS_MBEDTLS_ENABLE_ATCA: 0
  MGOS_MBEDTLS_ENABLE_ATCA: 1

libs:
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-atca
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-mqtt
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/rpc-service-i2c
  - origin: https://github.com/mongoose-os-libs/mbedtls

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-09-29
